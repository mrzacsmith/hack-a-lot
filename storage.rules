rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Basic read access for all authenticated users
    match /{allPaths=**} {
      allow read: if true;
    }

    // Profile images
    match /profile-images/{userId}/{allPaths=**} {
      allow write: if request.auth != null 
                   && request.auth.uid == userId.split('_')[0]
                   && request.resource.size < 5 * 1024 * 1024
                   && request.resource.contentType.matches('image/.*');
    }

    // Hackathon images - allow write for any authenticated user
    match /hackathons/{fileName} {
      allow write: if request.auth != null
                   && request.resource.size < 10 * 1024 * 1024
                   && request.resource.contentType.matches('image/.*');
    }

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // Header images can only be uploaded by the owner
    match /header-images/{userId}/{imageId} {
      // Allow read for everyone since these images are public
      allow read: if true;
      
      // Only allow upload/delete if it's the user's own header image folder
      allow write: if isOwner(userId);

      // Validate upload properties
      allow create: if request.resource.size < 5 * 1024 * 1024 // 5MB
                   && request.resource.contentType.matches('image/.*')
                   && isOwner(userId);
    }
  }
} 